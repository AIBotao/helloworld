name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1 # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: helloworldrepository # set this to your Amazon ECR repository name
  ECS_SERVICE: helloworldservice
  ECS_CLUSTER: helloworldcluster # set this to your Amazon ECS cluster name
  CONTAINER_NAME: helloworldcontainer

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: AKIA2YAN7NKOXFVWQA4N
          aws-secret-access-key: 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
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition helloworldtask \
          --query taskDefinition > task-definition.json

      - name: Update package.json version
        uses: jossef/action-set-json-field@v2
        with:
          file: package.json
          field: name
          value: lalalal

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/j7x6z4b9
          docker build -t helloworldrepository:$IMAGE_TAG .
          docker tag helloworldrepository:$IMAGE_TAG public.ecr.aws/j7x6z4b9/helloworldrepository:$IMAGE_TAG
          docker push public.ecr.aws/j7x6z4b9/helloworldrepository:$IMAGE_TAG
          echo "::set-output name=image::public.ecr.aws/j7x6z4b9/helloworldrepository:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        env:
          IMAGE_TAG: ${{ github.sha }}
          IMAGE: ${{ steps.build-image.outputs.image }}
        with:
          task-definition: task-definition.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: $IMAGE

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition.json
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
